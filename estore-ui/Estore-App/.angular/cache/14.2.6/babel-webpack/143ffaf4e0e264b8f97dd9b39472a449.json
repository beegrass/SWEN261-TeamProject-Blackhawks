{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../jersey.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nfunction JerseySearchComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const jersey_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/detail/\", jersey_r2.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", jersey_r2.name, \" \");\n  }\n}\n\nexport class JerseySearchComponent {\n  constructor(jerseyService) {\n    this.jerseyService = jerseyService;\n    this.searchTerms = new Subject();\n  } // Push a search term into the observable stream.\n\n\n  search(term) {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit() {\n    this.jerseys$ = this.searchTerms.pipe( // wait 300ms after each keystroke before considering the term\n    debounceTime(300), // ignore new term if same as previous term\n    distinctUntilChanged(), // switch to new search observable each time the term changes\n    switchMap(term => this.jerseyService.searchJerseys(term)));\n  }\n\n}\n\nJerseySearchComponent.ɵfac = function JerseySearchComponent_Factory(t) {\n  return new (t || JerseySearchComponent)(i0.ɵɵdirectiveInject(i1.JerseyService));\n};\n\nJerseySearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: JerseySearchComponent,\n  selectors: [[\"app-jersey-search\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[\"id\", \"search-component\"], [\"for\", \"search-box\"], [\"id\", \"search-box\", 3, \"input\"], [\"searchBox\", \"\"], [1, \"search-result\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n  template: function JerseySearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Jersey Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2, 3);\n      i0.ɵɵlistener(\"input\", function JerseySearchComponent_Template_input_input_3_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r0 = i0.ɵɵreference(4);\n\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"ul\", 4);\n      i0.ɵɵtemplate(6, JerseySearchComponent_li_6_Template, 3, 2, \"li\", 5);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"app-jersey-search\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 1, ctx.jerseys$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLinkWithHref, JerseySearchComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJqZXJzZXktc2VhcmNoLmNvbXBvbmVudC5jc3MifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqBA,OAArB,QAAoC,MAApC;AACA,SACEC,YADF,EACgBC,oBADhB,EACsCC,SADtC,QAEO,gBAFP;;;;;;;;ICGIC,2BAA6C,CAA7C,EAA6C,GAA7C,EAA6C,CAA7C;IAEIA;IACFA;;;;;IAFGA;IAAAA;IACDA;IAAAA;;;;ADOR,OAAM,MAAOC,qBAAP,CAA4B;EAKhCC,YAAoBC,aAApB,EAAgD;IAA5B;IAFZ,mBAAc,IAAIP,OAAJ,EAAd;EAE6C,CALrB,CAOhC;;;EACAQ,MAAM,CAACC,IAAD,EAAa;IACjB,KAAKC,WAAL,CAAiBC,IAAjB,CAAsBF,IAAtB;EACD;;EAEDG,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAKH,WAAL,CAAiBI,IAAjB,EACd;IACAb,YAAY,CAAC,GAAD,CAFE,EAId;IACAC,oBAAoB,EALN,EAOd;IACAC,SAAS,CAAEM,IAAD,IAAkB,KAAKF,aAAL,CAAmBQ,aAAnB,CAAiCN,IAAjC,CAAnB,CARK,CAAhB;EAUD;;AAvB+B;;;mBAArBJ,uBAAqBD;AAAA;;;QAArBC;EAAqBW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MCdlChB,+BAA2B,CAA3B,EAA2B,OAA3B,EAA2B,CAA3B;MAC0BA;MAAaA;MACrCA;MAAkCA;QAAAA;;QAAA;;QAAA,OAASA,qCAAT;MAAgC,CAAhC;MAAlCA;MAEAA;MACEA;;MAKFA;MAGFA;;;;MAR2BA;MAAAA;;;oDDSdC,uBAAqBgB;EAAAC","names":["Subject","debounceTime","distinctUntilChanged","switchMap","i0","JerseySearchComponent","constructor","jerseyService","search","term","searchTerms","next","ngOnInit","jerseys$","pipe","searchJerseys","selectors","decls","vars","consts","template","i2","styles"],"sourceRoot":"","sources":["C:\\Users\\vince\\SWEN261\\team-project-2221-swen-261-06-blackhawks\\estore-ui\\Estore-App\\src\\app\\jersey-search\\jersey-search.component.ts","C:\\Users\\vince\\SWEN261\\team-project-2221-swen-261-06-blackhawks\\estore-ui\\Estore-App\\src\\app\\jersey-search\\jersey-search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\n\nimport { Jersey } from '../jersey';\nimport { JerseyService } from '../jersey.service';\n\n@Component({\n  selector: 'app-jersey-search',\n  templateUrl: './jersey-search.component.html',\n  styleUrls: ['./jersey-search.component.css']\n})\nexport class JerseySearchComponent implements OnInit {\n\n  jerseys$!: Observable<Jersey[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private jerseyService: JerseyService) { }\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.jerseys$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.jerseyService.searchJerseys(term)),\n    );\n  }\n\n}\n","<div id=\"search-component\">\n  <label for=\"search-box\">Jersey Search</label>\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let jersey of jerseys$ | async\" >\n      <a routerLink=\"/detail/{{jersey.id}}\">\n        {{jersey.name}}\n      </a>\n    </li>\n  </ul>\n</div>\n\n<app-jersey-search></app-jersey-search>"]},"metadata":{},"sourceType":"module"}